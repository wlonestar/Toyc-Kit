; ModuleID = 'test/e2e/if_stmt.toyc'
source_filename = "test/e2e/if_stmt.toyc"
target triple = "x86_64-pc-linux-gnu"

declare i64 @printi64ln(i64)

define i64 @foo(i64 %0, i64 %1) {
  %3 = alloca i64, align 8
  store i64 %0, ptr %3, align 4
  %4 = alloca i64, align 8
  store i64 %1, ptr %4, align 4
  %5 = load i64, ptr %3, align 4
  %6 = load i64, ptr %4, align 4
  %7 = icmp eq i64 %5, %6
  br i1 %7, label %then, label %after

then:                                             ; preds = %2
  %8 = load i64, ptr %3, align 4
  %9 = load i64, ptr %4, align 4
  %10 = add nsw i64 %8, %9
  ret i64 %10

after:                                            ; preds = %2
  ret i64 -1
}

define i64 @main() {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  store i64 1, ptr %1, align 4
  store i64 1, ptr %2, align 4
  %3 = load i64, ptr %1, align 4
  %4 = load i64, ptr %2, align 4
  %5 = call i64 @foo(i64 %3, i64 %4)
  %6 = call i64 @printi64ln(i64 %5)
  store i64 2, ptr %1, align 4
  %7 = load i64, ptr %1, align 4
  %8 = load i64, ptr %2, align 4
  %9 = call i64 @foo(i64 %7, i64 %8)
  %10 = call i64 @printi64ln(i64 %9)
  ret i64 0
}
